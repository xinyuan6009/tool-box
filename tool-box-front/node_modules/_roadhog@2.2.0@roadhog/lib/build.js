"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _stringify = _interopRequireDefault(require("@babel/runtime/core-js/json/stringify"));

var _promise = _interopRequireDefault(require("@babel/runtime/core-js/promise"));

var _path = require("path");

var _build = _interopRequireDefault(require("af-webpack/build"));

var _getUserConfig = _interopRequireDefault(require("af-webpack/getUserConfig"));

var _getWebpackConfig = _interopRequireDefault(require("./getWebpackConfig"));

var _getPaths = _interopRequireDefault(require("./getPaths"));

var _registerBabel = _interopRequireDefault(require("./registerBabel"));

var debug = require('debug')('roadhog:build');

function _default() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _opts$cwd = opts.cwd,
      cwd = _opts$cwd === void 0 ? process.cwd() : _opts$cwd,
      watch = opts.watch;
  var babel = (0, _path.resolve)(__dirname, './babel.js');
  var paths = (0, _getPaths.default)(cwd);
  return new _promise.default(function (resolve) {
    // register babel for config files
    (0, _registerBabel.default)(babel, {
      cwd: cwd,
      configOnly: true
    }); // get user config

    var _getConfig = (0, _getUserConfig.default)({
      cwd: cwd
    }),
        config = _getConfig.config;

    debug("user config: ".concat((0, _stringify.default)(config))); // get webpack config

    var webpackConfig = (0, _getWebpackConfig.default)({
      cwd: cwd,
      config: config,
      babel: babel,
      paths: paths
    });
    (0, _build.default)({
      webpackConfig: webpackConfig,
      watch: watch,
      success: resolve
    });
  });
}