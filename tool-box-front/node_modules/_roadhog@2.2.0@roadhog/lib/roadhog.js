"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _chalk = _interopRequireDefault(require("chalk"));

var _child_process = require("child_process");

require('graceful-process')({
  logLevel: 'warn'
});

var script = process.argv[2];
var args = process.argv.slice(3);
var nodeVersion = process.versions.node;
var versions = nodeVersion.split('.');
var major = versions[0];
var minor = versions[1];

if (major * 10 + minor * 1 < 65) {
  console.log("Node version must >= 6.5, but got ".concat(major, ".").concat(minor));
  process.exit(1);
} // Notify update when process exits


var updater = require('update-notifier');

var pkg = require('../package.json');

updater({
  pkg: pkg
}).notify({
  defer: true
});
var scriptAlias = {
  server: 'dev'
};
var aliasedScript = scriptAlias[script] || script;

switch (aliasedScript) {
  case '-v':
  case '--version':
    var _pkg = require('../package.json');

    console.log(_pkg.version);

    if (!(_pkg._from && _pkg._resolved)) {
      console.log(_chalk.default.cyan('@local'));
    }

    break;

  case 'build':
  case 'dev':
  case 'test':
    require('atool-monitor').emit();

    var proc = (0, _child_process.fork)(require.resolve("../lib/scripts/".concat(aliasedScript)), args, {
      stdio: 'inherit'
    });
    proc.once('exit', function (code) {
      process.exit(code);
    });
    process.once('exit', function () {
      proc.kill();
    });
    break;

  default:
    console.log("Unknown script ".concat(_chalk.default.cyan(script), "."));
    break;
}