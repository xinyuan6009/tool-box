"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warnIfExists = warnIfExists;
exports.applyWebpackConfig = applyWebpackConfig;

var _fs = require("fs");

var _path = require("path");

var _chalk = _interopRequireDefault(require("chalk"));

var _webpack = _interopRequireDefault(require("webpack"));

function warnIfExists() {
  var filePath = (0, _path.resolve)('webpack.config.js');

  if ((0, _fs.existsSync)(filePath)) {
    console.log(_chalk.default.yellow("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F  It\\'s not recommended to use ".concat(_chalk.default.bold('webpack.config.js'), ", since it\\'s major or minor version upgrades may result in incompatibility. If you insist on doing so, please be careful of the compatibility after upgrading.")));
    console.log();
  }
}

function applyWebpackConfig(config) {
  var filePath = (0, _path.resolve)('webpack.config.js');

  if ((0, _fs.existsSync)(filePath)) {
    return require(filePath)(config, {
      // eslint-disable-line
      webpack: _webpack.default
    });
  } else {
    return config;
  }
}